# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Python CI"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

defaults:
  run:
    working-directory: ./

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[cicd]

  code_review:
    continue-on-error: true
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: pylint
        run: |
          pylint --rcfile pyproject.toml src/ensembl
          pylint --rcfile pyproject.toml tests

      - name: mypy
        run: |
          mypy --config-file pyproject.toml mevolib
          mypy --config-file pyproject.toml tests

      - name: black
        run: |
          black --config pyproject.toml --check .

  tests:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v4

      - name: Unit tests with coverage
        run: |
          coverage run -m pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml
          coverage xml -o coverage.xml
          genbadge coverage -i coverage.xml -o coverage/coverage-badge.svg
          coverage report

      - name: Upload unit tests results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage.xml
