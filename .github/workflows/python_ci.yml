# See the NOTICE file distributed with this work for additional information
# regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "Python CI"

on:
  workflow_call:
    inputs:
      python-version:
        description: Python version to run the CI checks on
        required: true
        type: string
      sqlalchemy-version:
        description: SQLAlchemy version to run the CI checks on
        required: true
        type: string

defaults:
  run:
    working-directory: ./

jobs:
  pylint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/python_build
        with:
          python-version: ${{ inputs.python-version }}
          tags: "[cicd]"

      - name: Run pylint
        run: |
          pylint --rcfile pyproject.toml src/ensembl
          pylint --rcfile pyproject.toml tests

  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/python_build
        with:
          python-version: ${{ inputs.python-version }}
          tags: "[cicd]"

      - name: Run mypy
        run: |
          mypy --config-file pyproject.toml src/ensembl
          mypy --config-file pyproject.toml tests

  black:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/python_build
        with:
          python-version: ${{ inputs.python-version }}
          tags: "[cicd]"

      - name: Run black
        run: |
          black --config pyproject.toml --check .

  pytest:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/python_build
        with:
          python-version: ${{ inputs.python-version }}
          sqlalchemy-version: ${{ inputs.sqlalchemy-version }}
          tags: "[cicd]"

      - name: Start MySQL server
        run: |
          sudo systemctl start mysql.service
        shell: bash

      - name: Run pytest with coverage
        run: |
          coverage run -m pytest --junitxml=./reports/test_results_part1.xml
          coverage run -a -m pytest tests/plugin/test_plugin.py::test_db_factory --keep-data \
              --junitxml=./reports/test_results_part2.xml
          coverage run -a -m pytest tests/database/test_unittestdb.py \
              --server=mysql://root:root@127.0.0.1:3306/ --junitxml=./reports/test_results_part3.xml
          junitparser merge --glob ./reports/test_results_part*.xml ./reports/test_results.xml
          coverage xml -o ./reports/coverage.xml
          coverage report -m

      - name: Add coverage reports
        if: ${{ github.event_name == 'pull_request' }}
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-xml-coverage-path: ./reports/coverage.xml
          junitxml-path: ./reports/test_results.xml
